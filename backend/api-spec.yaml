openapi: 3.0.0
info:
  title: Fastify API
  description: Detailed API documentation
  version: "1.0.0"
servers:
  - url: http://localhost:3333
    description: Development server
paths:
  /users:
    get:
      summary: List all users
      responses:
        "200":
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"

  /users/{id}:
    get:
      summary: Get a user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Unique identifier of the user to be obtained
      responses:
        "200":
          description: A single user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: User not found

    put:
      summary: Update a user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Unique identifier of the user to be updated
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: User updated successfully
        "404":
          description: User not found

    delete:
      summary: Delete a user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Unique identifier of the user to be deleted
      responses:
        "204":
          description: User deleted successfully
        "404":

  /rooms:
    get:
      summary: List all rooms
      responses:
        "200":
          description: A list of rooms
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Room"
    post:
      summary: Create a new room
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Room"
      responses:
        "201":
          description: Room created successfully
  /strategies:
    get:
      summary: List all strategies
      responses:
        "200":
          description: A list of strategies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Strategy"
    post:
      summary: Create a new strategy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Strategy"
      responses:
        "201":
          description: Strategy created successfully
  # Similar definitions for /signals, /analysis, /results, /tips, /message-model, /apiURL
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the user
        name:
          type: string
          description: Name of the user
        email:
          type: string
          format: email
          description: Email address of the user
        phone:
          type: string
          description: Phone number of the user
        is_admin:
          type: boolean
          description: Whether the user has administrative privileges
      required:
        - name
        - email
        - phone
        - is_admin
    Room:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the room
        name:
          type: string
          description: Name of the room
        # Add additional properties for Room
    Strategy:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the strategy
        name:
          type: string
          description: Name of the strategy
        # Add additional properties for Strategy
    # Define schemas for Signal, Analysis, Result, Tip, MessageModel, ApiURL similarly
